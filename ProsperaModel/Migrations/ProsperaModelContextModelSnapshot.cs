// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProsperaModel.Data;

#nullable disable

namespace ProsperaModel.Migrations
{
    [DbContext(typeof(ProsperaModelContext))]
    partial class ProsperaModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProsperaModel.Models.ConfiguracaoUsuarioModel", b =>
                {
                    b.Property<int>("IdConfiguracaoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConfiguracaoUsuario"));

                    b.Property<bool>("NotificacoesAtivadas")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioConfiguracaoUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdConfiguracaoUsuario");

                    b.HasIndex("UsuarioConfiguracaoUsuario");

                    b.ToTable("ConfiguracaoUsuarioModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.ContaBancariaModel", b =>
                {
                    b.Property<int>("IdContBancaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContBancaria"));

                    b.Property<int>("AgenciaContBan")
                        .HasColumnType("int");

                    b.Property<string>("NomeTitulaContBan")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("NumContBan")
                        .HasColumnType("int");

                    b.Property<string>("ObsContBan")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("SaldoContBan")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TipoContBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdContBancaria");

                    b.ToTable("ContaBancariaModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.ContasPagarModel", b =>
                {
                    b.Property<int>("IdContasPagar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContasPagar"));

                    b.Property<int>("AgenciaContBanCP")
                        .HasColumnType("int");

                    b.Property<int>("CodCP")
                        .HasColumnType("int");

                    b.Property<int>("ContaBanCP")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatEmissaoCP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatVencimentoCP")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoCP")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("DevedorCP")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("MetodoPgtoCP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ObservacaoCP")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("StatusCP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioCP")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCP")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdContasPagar");

                    b.HasIndex("UsuarioCP");

                    b.ToTable("ContasPagarModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.ContasReceberModel", b =>
                {
                    b.Property<int>("IdContasReceber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContasReceber"));

                    b.Property<int>("AgenciaContBanCR")
                        .HasColumnType("int");

                    b.Property<int>("CodCR")
                        .HasColumnType("int");

                    b.Property<int>("ContaBanCR")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatEmissaoCR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatVencimentoCR")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoCR")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("DevedorCR")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("MetodoPgtoCR")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ObservacaoCR")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("StatusCR")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioCR")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCR")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdContasReceber");

                    b.HasIndex("UsuarioCR");

                    b.ToTable("ContasReceberModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.DevedorModel", b =>
                {
                    b.Property<int>("IdDevedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDevedor"));

                    b.Property<string>("BairroDevedor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CEPDevedor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CidadeDevedor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DatCadasDevedor")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailDevedor")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("EndereDevedor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NomDevedor")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ObservaDevedor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("SaldoDevedor")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("StatusDevedor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tele2Devedor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TeleDevedor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UFDevedor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdDevedor");

                    b.ToTable("DevedorModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.ExtratoModel", b =>
                {
                    b.Property<int>("IdExtrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExtrato"));

                    b.Property<int>("CodContaExtrat")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataExtrat")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinatarioExtrat")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("NomBancoExtrat")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("NomeExtrat")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ObservacaoExtrat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StatusExtrat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoExtrat")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("UsuarioExtrat")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorExtrat")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdExtrato");

                    b.HasIndex("UsuarioExtrat");

                    b.ToTable("ExtratoModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.MetaModel", b =>
                {
                    b.Property<int>("IdMeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMeta"));

                    b.Property<string>("CatMeta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DatInicioMeta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTerminoMeta")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescMeta")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NomeMeta")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ObservacaoMeta")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("StatusMeta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioMeta")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorMeta")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdMeta");

                    b.HasIndex("UsuarioMeta");

                    b.ToTable("MetaModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.OrcamentoModel", b =>
                {
                    b.Property<int>("IdOrcamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrcamento"));

                    b.Property<string>("BairroOrca")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DatEmissaoOrca")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataValidadeOrca")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoOrca")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("EmailOrca")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("EnderecoOrca")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("EstadoOrca")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NomeContatoOrca")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("NomeOrca")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ObservacaoOrca")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("StatusOrca")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tele2Orca")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TeleOrca")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioOrca")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorOrca")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdOrcamento");

                    b.HasIndex("UsuarioOrca");

                    b.ToTable("OrcamentoModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.TransferenciaModel", b =>
                {
                    b.Property<int>("IdTransferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransferencia"));

                    b.Property<int>("AgenciaContBan")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatAgendaTransfere")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoTransfe")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("DestinatarioTransfe")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("NomeBanTransfe")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("NumContBan")
                        .HasColumnType("int");

                    b.Property<string>("TipoTransfe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UsuarioTransfe")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTransfe")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdTransferencia");

                    b.HasIndex("UsuarioTransfe");

                    b.ToTable("TransferenciaModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.UsuarioModel", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("CargoUsuario")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DatCadastroUsuario")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatUltimoAcesUsuario")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("IdTerceiros")
                        .HasColumnType("int");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SobrenomeUsuario")
                        .IsRequired()
                        .HasMaxLength(105)
                        .HasColumnType("nvarchar(105)");

                    b.Property<string>("StatusUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TerceirosModelIdTerceiros")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("TerceirosModelIdTerceiros");

                    b.ToTable("UsuarioModel");
                });

            modelBuilder.Entity("SeuProjeto.Models.TerceirosModel", b =>
                {
                    b.Property<int>("IdTerceiros")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTerceiros"));

                    b.Property<string>("BairroTerceiros")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CEPTerceiros")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CidadeTerceiros")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("ContaBancariaModelIdContBancaria")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastroTerceiros")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailTerceiros")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("EnderecoTerceiros")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("IdContaBancariaModel")
                        .HasColumnType("int");

                    b.Property<string>("NomeTerceiros")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ObservacaoTerceiros")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("SaldoTerceiros")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("StatusTerceiros")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefone2Terceiros")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelefoneTerceiros")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UFTerceiros")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdTerceiros");

                    b.HasIndex("ContaBancariaModelIdContBancaria");

                    b.ToTable("TerceirosModel");
                });

            modelBuilder.Entity("StatusCRModel", b =>
                {
                    b.Property<int>("IdStatusCR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusCR"));

                    b.Property<int>("CRModel")
                        .HasColumnType("int");

                    b.Property<int>("ContasReceberModelIdContasReceber")
                        .HasColumnType("int");

                    b.Property<string>("DescStatusCR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatusCR");

                    b.HasIndex("ContasReceberModelIdContasReceber");

                    b.ToTable("StatusCRModel");
                });

            modelBuilder.Entity("StatusContBancariaModel", b =>
                {
                    b.Property<int>("IdStatusContBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusContBan"));

                    b.Property<int>("ContBancariaModel")
                        .HasColumnType("int");

                    b.Property<int>("ContaBancariaModelIdContBancaria")
                        .HasColumnType("int");

                    b.Property<string>("DescStatusContBan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatusContBan");

                    b.HasIndex("ContaBancariaModelIdContBancaria");

                    b.ToTable("StatusContBancariaModel");
                });

            modelBuilder.Entity("StatusMetaModel", b =>
                {
                    b.Property<int>("IdStatusMeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusMeta"));

                    b.Property<string>("DescStatusMeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetaModelId")
                        .HasColumnType("int");

                    b.HasKey("IdStatusMeta");

                    b.HasIndex("MetaModelId");

                    b.ToTable("StatusMetaModel");
                });

            modelBuilder.Entity("StatusOrcamentoModel", b =>
                {
                    b.Property<int>("IdStatusOrca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusOrca"));

                    b.Property<string>("DescStatusOrca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrcamentoModelId")
                        .HasColumnType("int");

                    b.HasKey("IdStatusOrca");

                    b.HasIndex("OrcamentoModelId");

                    b.ToTable("StatusOrcamentoModel");
                });

            modelBuilder.Entity("StatusTransferenciaModel", b =>
                {
                    b.Property<int>("IdStatusTransfe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusTransfe"));

                    b.Property<string>("DescStatusTransfe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransferenciaModelId")
                        .HasColumnType("int");

                    b.HasKey("IdStatusTransfe");

                    b.HasIndex("TransferenciaModelId");

                    b.ToTable("StatusTransferenciaModel");
                });

            modelBuilder.Entity("StatusUsuarioModel", b =>
                {
                    b.Property<int>("IdStatusUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusUsuario"));

                    b.Property<string>("DescStatusUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioModelId")
                        .HasColumnType("int");

                    b.HasKey("IdStatusUsuario");

                    b.HasIndex("UsuarioModelId");

                    b.ToTable("StatusUsuarioModel");
                });

            modelBuilder.Entity("ProsperaModel.Models.ConfiguracaoUsuarioModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.UsuarioModel", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioConfiguracaoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ProsperaModel.Models.ContasPagarModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.UsuarioModel", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioCP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ProsperaModel.Models.ContasReceberModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.UsuarioModel", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioCR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ProsperaModel.Models.ExtratoModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.UsuarioModel", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioExtrat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ProsperaModel.Models.MetaModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.UsuarioModel", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioMeta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ProsperaModel.Models.OrcamentoModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.UsuarioModel", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioOrca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ProsperaModel.Models.TransferenciaModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.UsuarioModel", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioTransfe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ProsperaModel.Models.UsuarioModel", b =>
                {
                    b.HasOne("SeuProjeto.Models.TerceirosModel", "TerceirosModel")
                        .WithMany()
                        .HasForeignKey("TerceirosModelIdTerceiros")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TerceirosModel");
                });

            modelBuilder.Entity("SeuProjeto.Models.TerceirosModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.ContaBancariaModel", "ContaBancariaModel")
                        .WithMany()
                        .HasForeignKey("ContaBancariaModelIdContBancaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaBancariaModel");
                });

            modelBuilder.Entity("StatusCRModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.ContasReceberModel", "ContasReceberModel")
                        .WithMany()
                        .HasForeignKey("ContasReceberModelIdContasReceber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContasReceberModel");
                });

            modelBuilder.Entity("StatusContBancariaModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.ContaBancariaModel", "ContaBancariaModel")
                        .WithMany()
                        .HasForeignKey("ContaBancariaModelIdContBancaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaBancariaModel");
                });

            modelBuilder.Entity("StatusMetaModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.MetaModel", "MetaModel")
                        .WithMany()
                        .HasForeignKey("MetaModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetaModel");
                });

            modelBuilder.Entity("StatusOrcamentoModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.OrcamentoModel", "OrcamentoModel")
                        .WithMany()
                        .HasForeignKey("OrcamentoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrcamentoModel");
                });

            modelBuilder.Entity("StatusTransferenciaModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.TransferenciaModel", "TransferenciaModel")
                        .WithMany()
                        .HasForeignKey("TransferenciaModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransferenciaModel");
                });

            modelBuilder.Entity("StatusUsuarioModel", b =>
                {
                    b.HasOne("ProsperaModel.Models.UsuarioModel", "UsuarioModel")
                        .WithMany()
                        .HasForeignKey("UsuarioModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioModel");
                });
#pragma warning restore 612, 618
        }
    }
}
